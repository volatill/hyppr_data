[0;32m--------------start------------2020-11-10 00:36:33[0m
[0;32margs:dynamic-onehop --algo lazyup --epsilon 0.5 --prefix ./data/ --dataset orkut --query_size 40 --update_size 360 --beta 1 --with_idx [0m
action: dynamic-onehop
config.epsilon=0.5 
config.version=vector 
config.action=dynamic-onehop 
sub constructor 
init graph n: 3172700 m: 117185083
load graph finish 
finished initing parameters 
graph.n=3172700 graph.m=117185083 
queries.size()=2000 
updates.size()=2000 
config.delta=3.15189e-07 
config.pfail=3.15189e-07 
config.rmax=3.78284e-09 
config.omega=4.96948e+08 
i=0 
std::max(1=6 
errorlimit*epsrate=0.000533333 
count=0 
graph.gr[u].size()=82 
i=1 
std::max(1=5 
errorlimit*epsrate=0.00064 
count=0 
graph.gr[u].size()=15 
i=2 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=26 
i=3 
std::max(1=21 
errorlimit*epsrate=0.000152381 
count=0 
graph.gr[u].size()=19 
i=4 
std::max(1=11 
errorlimit*epsrate=0.000290909 
count=0 
graph.gr[u].size()=9 
i=5 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=0 
i=6 
std::max(1=5 
errorlimit*epsrate=0.00064 
count=0 
graph.gr[u].size()=40 
i=7 
std::max(1=22 
errorlimit*epsrate=0.000145455 
count=0 
graph.gr[u].size()=12 
i=8 
std::max(1=15 
errorlimit*epsrate=0.000213333 
count=0 
graph.gr[u].size()=6 
i=9 
std::max(1=11 
errorlimit*epsrate=0.000290909 
count=0 
graph.gr[u].size()=7 
i=10 
std::max(1=13 
errorlimit*epsrate=0.000246154 
count=0 
graph.gr[u].size()=30 
i=11 
std::max(1=2 
errorlimit*epsrate=0.0016 
count=0 
graph.gr[u].size()=17 
i=12 
std::max(1=4 
errorlimit*epsrate=0.0008 
count=0 
graph.gr[u].size()=13 
i=13 
i=14 
std::max(1=529 
errorlimit*epsrate=6.04915e-06 
count=0 
graph.gr[u].size()=191 
i=15 
std::max(1=12 
errorlimit*epsrate=0.000266667 
count=0 
graph.gr[u].size()=71 
i=16 
std::max(1=219 
errorlimit*epsrate=1.46119e-05 
count=0 
graph.gr[u].size()=24 
i=17 
std::max(1=8 
errorlimit*epsrate=0.0004 
count=0 
graph.gr[u].size()=1 
i=18 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=18 
i=19 
i=20 
std::max(1=32 
errorlimit*epsrate=0.0001 
count=0 
graph.gr[u].size()=54 
i=21 
std::max(1=26 
errorlimit*epsrate=0.000123077 
count=0 
graph.gr[u].size()=27 
i=22 
std::max(1=4 
errorlimit*epsrate=0.0008 
count=0 
graph.gr[u].size()=57 
i=23 
std::max(1=38 
errorlimit*epsrate=8.42105e-05 
count=0 
graph.gr[u].size()=34 
i=24 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=1 
i=25 
std::max(1=69 
errorlimit*epsrate=4.63768e-05 
count=0 
graph.gr[u].size()=93 
i=26 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=19 
i=27 
std::max(1=90 
errorlimit*epsrate=3.55556e-05 
count=0 
graph.gr[u].size()=108 
i=28 
std::max(1=16 
errorlimit*epsrate=0.0002 
count=0 
graph.gr[u].size()=26 
i=29 
std::max(1=18 
errorlimit*epsrate=0.000177778 
count=0 
graph.gr[u].size()=21 
i=30 
std::max(1=12 
errorlimit*epsrate=0.000266667 
count=0 
graph.gr[u].size()=34 
i=31 
std::max(1=21 
errorlimit*epsrate=0.000152381 
count=0 
graph.gr[u].size()=74 
i=32 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=27 
i=33 
std::max(1=47 
errorlimit*epsrate=6.80851e-05 
count=0 
graph.gr[u].size()=23 
i=34 
std::max(1=22 
errorlimit*epsrate=0.000145455 
count=0 
graph.gr[u].size()=52 
i=35 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=0 
i=36 
std::max(1=209 
errorlimit*epsrate=1.5311e-05 
count=0 
graph.gr[u].size()=87 
i=37 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=8 
i=38 
std::max(1=5 
errorlimit*epsrate=0.00064 
count=0 
graph.gr[u].size()=3 
i=39 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=15 
i=40 
std::max(1=34 
errorlimit*epsrate=9.41176e-05 
count=0 
graph.gr[u].size()=85 
i=41 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=0 
i=42 
std::max(1=10 
errorlimit*epsrate=0.00032 
count=0 
graph.gr[u].size()=16 
i=43 
std::max(1=8 
errorlimit*epsrate=0.0004 
count=0 
graph.gr[u].size()=16 
i=44 
i=45 
std::max(1=43 
errorlimit*epsrate=7.44186e-05 
count=0 
graph.gr[u].size()=29 
i=46 
std::max(1=8 
errorlimit*epsrate=0.0004 
count=0 
graph.gr[u].size()=32 
i=47 
std::max(1=8 
errorlimit*epsrate=0.0004 
count=0 
graph.gr[u].size()=12 
i=48 
std::max(1=38 
errorlimit*epsrate=8.42105e-05 
count=0 
graph.gr[u].size()=39 
i=49 
std::max(1=9 
errorlimit*epsrate=0.000355556 
count=0 
graph.gr[u].size()=22 
i=50 
i=51 
std::max(1=8 
errorlimit*epsrate=0.0004 
count=0 
graph.gr[u].size()=9 
i=52 
std::max(1=35 
errorlimit*epsrate=9.14286e-05 
count=0 
graph.gr[u].size()=30 
i=53 
std::max(1=2 
errorlimit*epsrate=0.0016 
count=0 
graph.gr[u].size()=20 
i=54 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=2 
i=55 
std::max(1=20 
errorlimit*epsrate=0.00016 
count=0 
graph.gr[u].size()=5 
i=56 
i=57 
i=58 
std::max(1=283 
errorlimit*epsrate=1.13074e-05 
count=0 
graph.gr[u].size()=241 
i=59 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=1 
i=60 
std::max(1=12 
errorlimit*epsrate=0.000266667 
count=0 
graph.gr[u].size()=8 
i=61 
std::max(1=57 
errorlimit*epsrate=5.61404e-05 
count=0 
graph.gr[u].size()=25 
i=62 
i=63 
std::max(1=2 
errorlimit*epsrate=0.0016 
count=0 
graph.gr[u].size()=27 
i=64 
std::max(1=23 
errorlimit*epsrate=0.00013913 
count=0 
graph.gr[u].size()=37 
i=65 
std::max(1=45 
errorlimit*epsrate=7.11111e-05 
count=0 
graph.gr[u].size()=32 
i=66 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=7 
i=67 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=25 
i=68 
std::max(1=4 
errorlimit*epsrate=0.0008 
count=0 
graph.gr[u].size()=18 
i=69 
std::max(1=12 
errorlimit*epsrate=0.000266667 
count=0 
graph.gr[u].size()=41 
i=70 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=19 
i=71 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=4 
i=72 
std::max(1=35 
errorlimit*epsrate=9.14286e-05 
count=0 
graph.gr[u].size()=11 
i=73 
std::max(1=48 
errorlimit*epsrate=6.66667e-05 
count=0 
graph.gr[u].size()=55 
i=74 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=7 
i=75 
std::max(1=13 
errorlimit*epsrate=0.000246154 
count=0 
graph.gr[u].size()=5 
i=76 
std::max(1=32 
errorlimit*epsrate=0.0001 
count=0 
graph.gr[u].size()=42 
i=77 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=0 
i=78 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=10 
i=79 
std::max(1=5 
errorlimit*epsrate=0.00064 
count=0 
graph.gr[u].size()=8 
i=80 
std::max(1=2 
errorlimit*epsrate=0.0016 
count=0 
graph.gr[u].size()=18 
i=81 
std::max(1=9 
errorlimit*epsrate=0.000355556 
count=0 
graph.gr[u].size()=10 
i=82 
i=83 
std::max(1=19 
errorlimit*epsrate=0.000168421 
count=0 
graph.gr[u].size()=48 
i=84 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=1 
i=85 
std::max(1=85 
errorlimit*epsrate=3.76471e-05 
count=0 
graph.gr[u].size()=38 
i=86 
i=87 
std::max(1=30 
errorlimit*epsrate=0.000106667 
count=0 
graph.gr[u].size()=23 
i=88 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=1 
i=89 
i=90 
std::max(1=17 
errorlimit*epsrate=0.000188235 
count=0 
graph.gr[u].size()=14 
i=91 
std::max(1=8 
errorlimit*epsrate=0.0004 
count=0 
graph.gr[u].size()=33 
i=92 
std::max(1=67 
errorlimit*epsrate=4.77612e-05 
count=0 
graph.gr[u].size()=5 
i=93 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=0 
i=94 
std::max(1=221 
errorlimit*epsrate=1.44796e-05 
count=0 
graph.gr[u].size()=78 
i=95 
std::max(1=8 
errorlimit*epsrate=0.0004 
count=0 
graph.gr[u].size()=72 
i=96 
std::max(1=26 
errorlimit*epsrate=0.000123077 
count=0 
graph.gr[u].size()=57 
i=97 
std::max(1=32 
errorlimit*epsrate=0.0001 
count=0 
graph.gr[u].size()=73 
i=98 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=13 
i=99 
std::max(1=21 
errorlimit*epsrate=0.000152381 
count=0 
graph.gr[u].size()=4 
i=100 
std::max(1=105 
errorlimit*epsrate=3.04762e-05 
count=0 
graph.gr[u].size()=88 
i=101 
std::max(1=30 
errorlimit*epsrate=0.000106667 
count=0 
graph.gr[u].size()=116 
i=102 
std::max(1=21 
errorlimit*epsrate=0.000152381 
count=0 
graph.gr[u].size()=20 
i=103 
std::max(1=21 
errorlimit*epsrate=0.000152381 
count=0 
graph.gr[u].size()=27 
i=104 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=43 
i=105 
std::max(1=28 
errorlimit*epsrate=0.000114286 
count=0 
graph.gr[u].size()=57 
i=106 
i=107 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=13 
i=108 
std::max(1=7 
errorlimit*epsrate=0.000457143 
count=0 
graph.gr[u].size()=17 
i=109 
std::max(1=9 
errorlimit*epsrate=0.000355556 
count=0 
graph.gr[u].size()=9 
i=110 
std::max(1=12 
errorlimit*epsrate=0.000266667 
count=0 
graph.gr[u].size()=119 
i=111 
std::max(1=43 
errorlimit*epsrate=7.44186e-05 
count=0 
graph.gr[u].size()=72 
i=112 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=2 
i=113 
std::max(1=5 
errorlimit*epsrate=0.00064 
count=0 
graph.gr[u].size()=15 
i=114 
std::max(1=14 
errorlimit*epsrate=0.000228571 
count=0 
graph.gr[u].size()=11 
i=115 
std::max(1=29 
errorlimit*epsrate=0.000110345 
count=0 
graph.gr[u].size()=29 
i=116 
i=117 
std::max(1=5 
errorlimit*epsrate=0.00064 
count=0 
graph.gr[u].size()=41 
i=118 
std::max(1=12 
errorlimit*epsrate=0.000266667 
count=0 
graph.gr[u].size()=122 
i=119 
std::max(1=7 
errorlimit*epsrate=0.000457143 
count=0 
graph.gr[u].size()=34 
i=120 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=7 
i=121 
std::max(1=5 
errorlimit*epsrate=0.00064 
count=0 
graph.gr[u].size()=16 
i=122 
std::max(1=43 
errorlimit*epsrate=7.44186e-05 
count=0 
graph.gr[u].size()=23 
i=123 
std::max(1=11 
errorlimit*epsrate=0.000290909 
count=0 
graph.gr[u].size()=3 
i=124 
std::max(1=17 
errorlimit*epsrate=0.000188235 
count=0 
graph.gr[u].size()=51 
i=125 
i=126 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=11 
i=127 
std::max(1=5 
errorlimit*epsrate=0.00064 
count=0 
graph.gr[u].size()=3 
i=128 
std::max(1=29 
errorlimit*epsrate=0.000110345 
count=0 
graph.gr[u].size()=96 
i=129 
std::max(1=7 
errorlimit*epsrate=0.000457143 
count=0 
graph.gr[u].size()=19 
i=130 
std::max(1=46 
errorlimit*epsrate=6.95652e-05 
count=0 
graph.gr[u].size()=41 
i=131 
std::max(1=52 
errorlimit*epsrate=6.15385e-05 
count=0 
graph.gr[u].size()=8 
i=132 
std::max(1=5 
errorlimit*epsrate=0.00064 
count=0 
graph.gr[u].size()=5 
i=133 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=6 
i=134 
std::max(1=54 
errorlimit*epsrate=5.92593e-05 
count=0 
graph.gr[u].size()=13 
i=135 
std::max(1=28 
errorlimit*epsrate=0.000114286 
count=0 
graph.gr[u].size()=16 
i=136 
std::max(1=9 
errorlimit*epsrate=0.000355556 
count=0 
graph.gr[u].size()=1 
i=137 
std::max(1=8 
errorlimit*epsrate=0.0004 
count=0 
graph.gr[u].size()=50 
i=138 
std::max(1=18 
errorlimit*epsrate=0.000177778 
count=0 
graph.gr[u].size()=12 
i=139 
std::max(1=33 
errorlimit*epsrate=9.69697e-05 
count=0 
graph.gr[u].size()=85 
i=140 
i=141 
std::max(1=21 
errorlimit*epsrate=0.000152381 
count=0 
graph.gr[u].size()=21 
i=142 
i=143 
std::max(1=27 
errorlimit*epsrate=0.000118519 
count=0 
graph.gr[u].size()=53 
i=144 
std::max(1=37 
errorlimit*epsrate=8.64865e-05 
count=0 
graph.gr[u].size()=33 
i=145 
std::max(1=232 
errorlimit*epsrate=1.37931e-05 
count=0 
graph.gr[u].size()=30 
i=146 
std::max(1=6 
errorlimit*epsrate=0.000533333 
count=0 
graph.gr[u].size()=5 
i=147 
std::max(1=8 
errorlimit*epsrate=0.0004 
count=0 
graph.gr[u].size()=9 
i=148 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=5 
i=149 
std::max(1=24 
errorlimit*epsrate=0.000133333 
count=0 
graph.gr[u].size()=38 
i=150 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=1 
i=151 
std::max(1=18 
errorlimit*epsrate=0.000177778 
count=0 
graph.gr[u].size()=29 
i=152 
std::max(1=74 
errorlimit*epsrate=4.32432e-05 
count=0 
graph.gr[u].size()=61 
i=153 
std::max(1=13 
errorlimit*epsrate=0.000246154 
count=0 
graph.gr[u].size()=6 
i=154 
std::max(1=58 
errorlimit*epsrate=5.51724e-05 
count=0 
graph.gr[u].size()=1 
i=155 
std::max(1=2 
errorlimit*epsrate=0.0016 
count=0 
graph.gr[u].size()=5 
i=156 
std::max(1=150 
errorlimit*epsrate=2.13333e-05 
count=0 
graph.gr[u].size()=35 
i=157 
std::max(1=9 
errorlimit*epsrate=0.000355556 
count=0 
graph.gr[u].size()=65 
i=158 
std::max(1=25 
errorlimit*epsrate=0.000128 
count=0 
graph.gr[u].size()=13 
i=159 
std::max(1=54 
errorlimit*epsrate=5.92593e-05 
count=0 
graph.gr[u].size()=16 
i=160 
std::max(1=2 
errorlimit*epsrate=0.0016 
count=0 
graph.gr[u].size()=27 
i=161 
std::max(1=39 
errorlimit*epsrate=8.20513e-05 
count=0 
graph.gr[u].size()=22 
i=162 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=10 
i=163 
std::max(1=4 
errorlimit*epsrate=0.0008 
count=0 
graph.gr[u].size()=8 
i=164 
i=165 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=17 
i=166 
std::max(1=27 
errorlimit*epsrate=0.000118519 
count=0 
graph.gr[u].size()=1 
i=167 
std::max(1=36 
errorlimit*epsrate=8.88889e-05 
count=0 
graph.gr[u].size()=68 
i=168 
std::max(1=12 
errorlimit*epsrate=0.000266667 
count=0 
graph.gr[u].size()=11 
i=169 
std::max(1=67 
errorlimit*epsrate=4.77612e-05 
count=0 
graph.gr[u].size()=109 
i=170 
std::max(1=15 
errorlimit*epsrate=0.000213333 
count=0 
graph.gr[u].size()=6 
i=171 
std::max(1=44 
errorlimit*epsrate=7.27273e-05 
count=0 
graph.gr[u].size()=23 
i=172 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=2 
i=173 
std::max(1=8 
errorlimit*epsrate=0.0004 
count=0 
graph.gr[u].size()=8 
i=174 
std::max(1=5 
errorlimit*epsrate=0.00064 
count=0 
graph.gr[u].size()=10 
i=175 
i=176 
std::max(1=43 
errorlimit*epsrate=7.44186e-05 
count=0 
graph.gr[u].size()=112 
i=177 
std::max(1=54 
errorlimit*epsrate=5.92593e-05 
count=0 
graph.gr[u].size()=27 
i=178 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=51 
i=179 
i=180 
std::max(1=45 
errorlimit*epsrate=7.11111e-05 
count=0 
graph.gr[u].size()=11 
i=181 
std::max(1=23 
errorlimit*epsrate=0.00013913 
count=0 
graph.gr[u].size()=13 
i=182 
std::max(1=2 
errorlimit*epsrate=0.0016 
count=0 
graph.gr[u].size()=22 
i=183 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=1 
i=184 
std::max(1=14 
errorlimit*epsrate=0.000228571 
count=0 
graph.gr[u].size()=51 
i=185 
std::max(1=99 
errorlimit*epsrate=3.23232e-05 
count=0 
graph.gr[u].size()=148 
i=186 
std::max(1=65 
errorlimit*epsrate=4.92308e-05 
count=0 
graph.gr[u].size()=104 
i=187 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=0 
i=188 
std::max(1=18 
errorlimit*epsrate=0.000177778 
count=0 
graph.gr[u].size()=33 
i=189 
i=190 
i=191 
std::max(1=10 
errorlimit*epsrate=0.00032 
count=0 
graph.gr[u].size()=51 
i=192 
std::max(1=9 
errorlimit*epsrate=0.000355556 
count=0 
graph.gr[u].size()=80 
i=193 
std::max(1=107 
errorlimit*epsrate=2.99065e-05 
count=0 
graph.gr[u].size()=134 
i=194 
std::max(1=9 
errorlimit*epsrate=0.000355556 
count=0 
graph.gr[u].size()=2 
i=195 
std::max(1=31 
errorlimit*epsrate=0.000103226 
count=0 
graph.gr[u].size()=3 
i=196 
std::max(1=220 
errorlimit*epsrate=1.45455e-05 
count=0 
graph.gr[u].size()=7 
i=197 
std::max(1=7 
errorlimit*epsrate=0.000457143 
count=0 
graph.gr[u].size()=81 
i=198 
std::max(1=53 
errorlimit*epsrate=6.03774e-05 
count=0 
graph.gr[u].size()=25 
i=199 
std::max(1=6 
errorlimit*epsrate=0.000533333 
count=0 
graph.gr[u].size()=36 
i=200 
i=201 
std::max(1=30 
errorlimit*epsrate=0.000106667 
count=0 
graph.gr[u].size()=79 
i=202 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=21 
i=203 
std::max(1=21 
errorlimit*epsrate=0.000152381 
count=0 
graph.gr[u].size()=24 
i=204 
std::max(1=15 
errorlimit*epsrate=0.000213333 
count=0 
graph.gr[u].size()=35 
i=205 
std::max(1=17 
errorlimit*epsrate=0.000188235 
count=0 
graph.gr[u].size()=20 
i=206 
std::max(1=56 
errorlimit*epsrate=5.71429e-05 
count=0 
graph.gr[u].size()=84 
i=207 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=15 
i=208 
std::max(1=9 
errorlimit*epsrate=0.000355556 
count=0 
graph.gr[u].size()=23 
i=209 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=1 
i=210 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=6 
i=211 
std::max(1=7 
errorlimit*epsrate=0.000457143 
count=0 
graph.gr[u].size()=13 
i=212 
std::max(1=38 
errorlimit*epsrate=8.42105e-05 
count=0 
graph.gr[u].size()=24 
i=213 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=3 
i=214 
std::max(1=29 
errorlimit*epsrate=0.000110345 
count=0 
graph.gr[u].size()=7 
i=215 
std::max(1=8 
errorlimit*epsrate=0.0004 
count=0 
graph.gr[u].size()=62 
i=216 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=7 
i=217 
std::max(1=17 
errorlimit*epsrate=0.000188235 
count=0 
graph.gr[u].size()=20 
i=218 
std::max(1=12 
errorlimit*epsrate=0.000266667 
count=0 
graph.gr[u].size()=16 
i=219 
std::max(1=27 
errorlimit*epsrate=0.000118519 
count=0 
graph.gr[u].size()=18 
i=220 
std::max(1=51 
errorlimit*epsrate=6.27451e-05 
count=0 
graph.gr[u].size()=29 
i=221 
std::max(1=59 
errorlimit*epsrate=5.42373e-05 
count=0 
graph.gr[u].size()=88 
i=222 
std::max(1=18 
errorlimit*epsrate=0.000177778 
count=0 
graph.gr[u].size()=13 
i=223 
std::max(1=7 
errorlimit*epsrate=0.000457143 
count=0 
graph.gr[u].size()=29 
i=224 
std::max(1=23 
errorlimit*epsrate=0.00013913 
count=0 
graph.gr[u].size()=11 
i=225 
std::max(1=6 
errorlimit*epsrate=0.000533333 
count=0 
graph.gr[u].size()=33 
i=226 
std::max(1=12 
errorlimit*epsrate=0.000266667 
count=0 
graph.gr[u].size()=33 
i=227 
std::max(1=11 
errorlimit*epsrate=0.000290909 
count=0 
graph.gr[u].size()=30 
i=228 
i=229 
std::max(1=45 
errorlimit*epsrate=7.11111e-05 
count=0 
graph.gr[u].size()=36 
i=230 
std::max(1=21 
errorlimit*epsrate=0.000152381 
count=0 
graph.gr[u].size()=27 
i=231 
std::max(1=224 
errorlimit*epsrate=1.42857e-05 
count=0 
graph.gr[u].size()=18 
i=232 
i=233 
std::max(1=43 
errorlimit*epsrate=7.44186e-05 
count=0 
graph.gr[u].size()=134 
i=234 
i=235 
i=236 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=0 
i=237 
std::max(1=89 
errorlimit*epsrate=3.59551e-05 
count=0 
graph.gr[u].size()=44 
i=238 
std::max(1=16 
errorlimit*epsrate=0.0002 
count=0 
graph.gr[u].size()=19 
i=239 
std::max(1=55 
errorlimit*epsrate=5.81818e-05 
count=0 
graph.gr[u].size()=35 
i=240 
std::max(1=46 
errorlimit*epsrate=6.95652e-05 
count=0 
graph.gr[u].size()=24 
i=241 
std::max(1=49 
errorlimit*epsrate=6.53061e-05 
count=0 
graph.gr[u].size()=20 
i=242 
std::max(1=14 
errorlimit*epsrate=0.000228571 
count=0 
graph.gr[u].size()=23 
i=243 
std::max(1=9 
errorlimit*epsrate=0.000355556 
count=0 
graph.gr[u].size()=16 
i=244 
i=245 
std::max(1=20 
errorlimit*epsrate=0.00016 
count=0 
graph.gr[u].size()=23 
i=246 
std::max(1=62 
errorlimit*epsrate=5.16129e-05 
count=0 
graph.gr[u].size()=39 
i=247 
std::max(1=19 
errorlimit*epsrate=0.000168421 
count=0 
graph.gr[u].size()=38 
i=248 
std::max(1=6 
errorlimit*epsrate=0.000533333 
count=0 
graph.gr[u].size()=25 
i=249 
std::max(1=49 
errorlimit*epsrate=6.53061e-05 
count=0 
graph.gr[u].size()=34 
i=250 
std::max(1=44 
errorlimit*epsrate=7.27273e-05 
count=0 
graph.gr[u].size()=76 
i=251 
std::max(1=325 
errorlimit*epsrate=9.84615e-06 
count=0 
graph.gr[u].size()=119 
i=252 
std::max(1=31 
errorlimit*epsrate=0.000103226 
count=0 
graph.gr[u].size()=55 
i=253 
std::max(1=18 
errorlimit*epsrate=0.000177778 
count=0 
graph.gr[u].size()=32 
i=254 
std::max(1=6 
errorlimit*epsrate=0.000533333 
count=0 
graph.gr[u].size()=9 
i=255 
std::max(1=41 
errorlimit*epsrate=7.80488e-05 
count=0 
graph.gr[u].size()=20 
i=256 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=14 
i=257 
i=258 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=1 
i=259 
i=260 
std::max(1=48 
errorlimit*epsrate=6.66667e-05 
count=0 
graph.gr[u].size()=29 
i=261 
std::max(1=18 
errorlimit*epsrate=0.000177778 
count=0 
graph.gr[u].size()=21 
i=262 
std::max(1=17 
errorlimit*epsrate=0.000188235 
count=0 
graph.gr[u].size()=122 
i=263 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=67 
i=264 
std::max(1=153 
errorlimit*epsrate=2.0915e-05 
count=0 
graph.gr[u].size()=35 
i=265 
std::max(1=21 
errorlimit*epsrate=0.000152381 
count=0 
graph.gr[u].size()=44 
i=266 
std::max(1=29 
errorlimit*epsrate=0.000110345 
count=0 
graph.gr[u].size()=27 
i=267 
std::max(1=29 
errorlimit*epsrate=0.000110345 
count=0 
graph.gr[u].size()=20 
i=268 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=1 
i=269 
std::max(1=18 
errorlimit*epsrate=0.000177778 
count=0 
graph.gr[u].size()=21 
i=270 
std::max(1=7 
errorlimit*epsrate=0.000457143 
count=0 
graph.gr[u].size()=50 
i=271 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=1 
i=272 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=0 
i=273 
std::max(1=16 
errorlimit*epsrate=0.0002 
count=0 
graph.gr[u].size()=28 
i=274 
std::max(1=24 
errorlimit*epsrate=0.000133333 
count=0 
graph.gr[u].size()=75 
i=275 
std::max(1=21 
errorlimit*epsrate=0.000152381 
count=0 
graph.gr[u].size()=11 
i=276 
std::max(1=20 
errorlimit*epsrate=0.00016 
count=0 
graph.gr[u].size()=29 
i=277 
std::max(1=5 
errorlimit*epsrate=0.00064 
count=0 
graph.gr[u].size()=27 
i=278 
std::max(1=59 
errorlimit*epsrate=5.42373e-05 
count=0 
graph.gr[u].size()=24 
i=279 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=6 
i=280 
std::max(1=25 
errorlimit*epsrate=0.000128 
count=0 
graph.gr[u].size()=22 
i=281 
std::max(1=51 
errorlimit*epsrate=6.27451e-05 
count=0 
graph.gr[u].size()=143 
i=282 
std::max(1=27 
errorlimit*epsrate=0.000118519 
count=0 
graph.gr[u].size()=42 
i=283 
i=284 
std::max(1=18 
errorlimit*epsrate=0.000177778 
count=0 
graph.gr[u].size()=8 
i=285 
std::max(1=493 
errorlimit*epsrate=6.49087e-06 
count=0 
graph.gr[u].size()=102 
i=286 
i=287 
std::max(1=170 
errorlimit*epsrate=1.88235e-05 
count=0 
graph.gr[u].size()=46 
i=288 
std::max(1=219 
errorlimit*epsrate=1.46119e-05 
count=0 
graph.gr[u].size()=137 
i=289 
std::max(1=23 
errorlimit*epsrate=0.00013913 
count=0 
graph.gr[u].size()=39 
i=290 
std::max(1=40 
errorlimit*epsrate=8e-05 
count=0 
graph.gr[u].size()=13 
i=291 
std::max(1=9 
errorlimit*epsrate=0.000355556 
count=0 
graph.gr[u].size()=36 
i=292 
std::max(1=89 
errorlimit*epsrate=3.59551e-05 
count=0 
graph.gr[u].size()=93 
i=293 
std::max(1=19 
errorlimit*epsrate=0.000168421 
count=0 
graph.gr[u].size()=16 
i=294 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=10 
i=295 
std::max(1=601 
errorlimit*epsrate=5.32446e-06 
count=0 
graph.gr[u].size()=35 
i=296 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=14 
i=297 
std::max(1=26 
errorlimit*epsrate=0.000123077 
count=0 
graph.gr[u].size()=16 
i=298 
std::max(1=17 
errorlimit*epsrate=0.000188235 
count=0 
graph.gr[u].size()=116 
i=299 
std::max(1=25 
errorlimit*epsrate=0.000128 
count=0 
graph.gr[u].size()=27 
i=300 
std::max(1=10 
errorlimit*epsrate=0.00032 
count=0 
graph.gr[u].size()=12 
i=301 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=0 
i=302 
std::max(1=206 
errorlimit*epsrate=1.5534e-05 
count=0 
graph.gr[u].size()=6 
i=303 
std::max(1=5219 
errorlimit*epsrate=6.13144e-07 
count=0 
graph.gr[u].size()=28 
i=304 
std::max(1=22 
errorlimit*epsrate=0.000145455 
count=0 
graph.gr[u].size()=3 
i=305 
std::max(1=71 
errorlimit*epsrate=4.50704e-05 
count=0 
graph.gr[u].size()=30 
i=306 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=15 
i=307 
std::max(1=30 
errorlimit*epsrate=0.000106667 
count=0 
graph.gr[u].size()=72 
i=308 
std::max(1=19 
errorlimit*epsrate=0.000168421 
count=0 
graph.gr[u].size()=22 
i=309 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=0 
i=310 
std::max(1=125 
errorlimit*epsrate=2.56e-05 
count=0 
graph.gr[u].size()=44 
i=311 
std::max(1=39 
errorlimit*epsrate=8.20513e-05 
count=0 
graph.gr[u].size()=100 
i=312 
std::max(1=2 
errorlimit*epsrate=0.0016 
count=0 
graph.gr[u].size()=9 
i=313 
std::max(1=6 
errorlimit*epsrate=0.000533333 
count=0 
graph.gr[u].size()=1 
i=314 
std::max(1=13 
errorlimit*epsrate=0.000246154 
count=0 
graph.gr[u].size()=27 
i=315 
std::max(1=12 
errorlimit*epsrate=0.000266667 
count=0 
graph.gr[u].size()=17 
i=316 
std::max(1=17 
errorlimit*epsrate=0.000188235 
count=0 
graph.gr[u].size()=94 
i=317 
std::max(1=34 
errorlimit*epsrate=9.41176e-05 
count=0 
graph.gr[u].size()=218 
i=318 
std::max(1=44 
errorlimit*epsrate=7.27273e-05 
count=0 
graph.gr[u].size()=15 
i=319 
std::max(1=47 
errorlimit*epsrate=6.80851e-05 
count=0 
graph.gr[u].size()=16 
i=320 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=16 
i=321 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=16 
i=322 
std::max(1=44 
errorlimit*epsrate=7.27273e-05 
count=0 
graph.gr[u].size()=126 
i=323 
std::max(1=24 
errorlimit*epsrate=0.000133333 
count=0 
graph.gr[u].size()=4 
i=324 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=33 
i=325 
std::max(1=6 
errorlimit*epsrate=0.000533333 
count=0 
graph.gr[u].size()=22 
i=326 
std::max(1=18 
errorlimit*epsrate=0.000177778 
count=0 
graph.gr[u].size()=51 
i=327 
std::max(1=22 
errorlimit*epsrate=0.000145455 
count=0 
graph.gr[u].size()=138 
i=328 
std::max(1=6 
errorlimit*epsrate=0.000533333 
count=0 
graph.gr[u].size()=22 
i=329 
i=330 
std::max(1=23 
errorlimit*epsrate=0.00013913 
count=0 
graph.gr[u].size()=37 
i=331 
i=332 
std::max(1=71 
errorlimit*epsrate=4.50704e-05 
count=0 
graph.gr[u].size()=14 
i=333 
std::max(1=99 
errorlimit*epsrate=3.23232e-05 
count=0 
graph.gr[u].size()=58 
i=334 
std::max(1=2 
errorlimit*epsrate=0.0016 
count=0 
graph.gr[u].size()=29 
i=335 
std::max(1=52 
errorlimit*epsrate=6.15385e-05 
count=0 
graph.gr[u].size()=12 
i=336 
std::max(1=46 
errorlimit*epsrate=6.95652e-05 
count=0 
graph.gr[u].size()=75 
i=337 
std::max(1=92 
errorlimit*epsrate=3.47826e-05 
count=0 
graph.gr[u].size()=1 
i=338 
std::max(1=4 
errorlimit*epsrate=0.0008 
count=0 
graph.gr[u].size()=14 
i=339 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=6 
i=340 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=39 
i=341 
i=342 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=1 
i=343 
std::max(1=4 
errorlimit*epsrate=0.0008 
count=0 
graph.gr[u].size()=60 
i=344 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=8 
i=345 
std::max(1=6 
errorlimit*epsrate=0.000533333 
count=0 
graph.gr[u].size()=3 
i=346 
std::max(1=20 
errorlimit*epsrate=0.00016 
count=0 
graph.gr[u].size()=94 
i=347 
std::max(1=430 
errorlimit*epsrate=7.44186e-06 
count=0 
graph.gr[u].size()=23 
i=348 
std::max(1=11 
errorlimit*epsrate=0.000290909 
count=0 
graph.gr[u].size()=29 
i=349 
std::max(1=2 
errorlimit*epsrate=0.0016 
count=0 
graph.gr[u].size()=3 
i=350 
i=351 
std::max(1=78 
errorlimit*epsrate=4.10256e-05 
count=0 
graph.gr[u].size()=3 
i=352 
std::max(1=23 
errorlimit*epsrate=0.00013913 
count=0 
graph.gr[u].size()=26 
i=353 
std::max(1=5 
errorlimit*epsrate=0.00064 
count=0 
graph.gr[u].size()=16 
i=354 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=14 
i=355 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=144 
i=356 
std::max(1=5 
errorlimit*epsrate=0.00064 
count=0 
graph.gr[u].size()=9 
i=357 
std::max(1=19 
errorlimit*epsrate=0.000168421 
count=0 
graph.gr[u].size()=37 
i=358 
std::max(1=2 
errorlimit*epsrate=0.0016 
count=0 
graph.gr[u].size()=21 
i=359 
std::max(1=55 
errorlimit*epsrate=5.81818e-05 
count=0 
graph.gr[u].size()=13 
i=360 
std::max(1=3 
errorlimit*epsrate=0.00106667 
count=0 
graph.gr[u].size()=7 
i=361 
std::max(1=134 
errorlimit*epsrate=2.38806e-05 
count=0 
graph.gr[u].size()=379 
i=362 
std::max(1=10 
errorlimit*epsrate=0.00032 
count=0 
graph.gr[u].size()=4 
i=363 
i=364 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=20 
i=365 
std::max(1=24 
errorlimit*epsrate=0.000133333 
count=0 
graph.gr[u].size()=1 
i=366 
std::max(1=23 
errorlimit*epsrate=0.00013913 
count=0 
graph.gr[u].size()=8 
i=367 
std::max(1=6 
errorlimit*epsrate=0.000533333 
count=0 
graph.gr[u].size()=25 
i=368 
i=369 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=2 
i=370 
std::max(1=6 
errorlimit*epsrate=0.000533333 
count=0 
graph.gr[u].size()=12 
i=371 
std::max(1=199 
errorlimit*epsrate=1.60804e-05 
count=0 
graph.gr[u].size()=17 
i=372 
std::max(1=2 
errorlimit*epsrate=0.0016 
count=0 
graph.gr[u].size()=2 
i=373 
std::max(1=29 
errorlimit*epsrate=0.000110345 
count=0 
graph.gr[u].size()=114 
i=374 
i=375 
std::max(1=42 
errorlimit*epsrate=7.61905e-05 
count=0 
graph.gr[u].size()=85 
i=376 
std::max(1=7 
errorlimit*epsrate=0.000457143 
count=0 
graph.gr[u].size()=5 
i=377 
std::max(1=145 
errorlimit*epsrate=2.2069e-05 
count=0 
graph.gr[u].size()=92 
i=378 
std::max(1=8 
errorlimit*epsrate=0.0004 
count=0 
graph.gr[u].size()=1 
i=379 
std::max(1=83 
errorlimit*epsrate=3.85542e-05 
count=0 
graph.gr[u].size()=10 
i=380 
std::max(1=62 
errorlimit*epsrate=5.16129e-05 
count=0 
graph.gr[u].size()=19 
i=381 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=2 
i=382 
std::max(1=135 
errorlimit*epsrate=2.37037e-05 
count=0 
graph.gr[u].size()=164 
i=383 
std::max(1=78 
errorlimit*epsrate=4.10256e-05 
count=0 
graph.gr[u].size()=499 
i=384 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=2 
i=385 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=12 
i=386 
std::max(1=25 
errorlimit*epsrate=0.000128 
count=0 
graph.gr[u].size()=3 
i=387 
std::max(1=83 
errorlimit*epsrate=3.85542e-05 
count=0 
graph.gr[u].size()=76 
i=388 
std::max(1=14 
errorlimit*epsrate=0.000228571 
count=0 
graph.gr[u].size()=17 
i=389 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=10 
i=390 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=7 
i=391 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=1 
i=392 
i=393 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=11 
i=394 
std::max(1=1 
errorlimit*epsrate=0.0032 
count=0 
graph.gr[u].size()=5 
i=395 
i=396 
std::max(1=33 
errorlimit*epsrate=9.69697e-05 
count=0 
graph.gr[u].size()=64 
i=397 
std::max(1=13 
errorlimit*epsrate=0.000246154 
count=0 
graph.gr[u].size()=68 
i=398 
std::max(1=60 
errorlimit*epsrate=5.33333e-05 
count=0 
graph.gr[u].size()=32 
i=399 
Randomwalk: 1475872
Hit: 1475872
### Timer 
t=   0  1.420031  
t=   3  0.329093  
t=   5  0.019319  
t=   6  0.043964  
t=  11  1.076214  
t=  12  0.008471  
t=  13  0.000681  
total=1.47774 
config.beta=1 
[0;31m--------------stop------------2020-11-10 00:37:22[0m



