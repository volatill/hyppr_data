[0;32m--------------start------------2020-09-17 00:51:22[0m
[0;32margs:dynamic-hybrid --algo lazyup --epsilon 0.5 --prefix ./data/ --dataset webstanford --query_size 150 --update_size 150 --beta 1 --with_idx [0m
action: dynamic-hybrid
config.epsilon=0.5 
config.version=vector 
config.action=dynamic-hybrid 
sub constructor 
init graph n: 281904 m: 2312497
load graph finish 
finished initing parameters 
graph.n=281904 graph.m=2312497 
ss_size=50 topk_size=50 onehop_size=50 
queries.size()=2000 
updates.size()=2000 
config.delta=3.54731e-06 
config.pfail=3.54731e-06 
config.rmax=9.82503e-08 
config.omega=3.7331e+07 
i=0 
std::max(1=11 
errorlimit*epsrate=0.000195102 
count=0 
graph.gr[u].size()=4 
i=1 
i=2 
std::max(1=6 
errorlimit*epsrate=0.000106419 
count=0 
graph.gr[u].size()=3 
i=3 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=5 
i=4 
i=5 
i=6 
i=7 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=1 
i=8 
std::max(1=8 
errorlimit*epsrate=0.000141892 
count=0 
graph.gr[u].size()=2 
i=9 
i=10 
i=11 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=1 
i=12 
i=13 
std::max(1=10 
errorlimit*epsrate=0.000177365 
count=0 
graph.gr[u].size()=2 
i=14 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=4 
i=15 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=3 
i=16 
i=17 
std::max(1=6 
errorlimit*epsrate=0.000106419 
count=0 
graph.gr[u].size()=4 
i=18 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=3 
i=19 
i=20 
std::max(1=7 
errorlimit*epsrate=0.000124156 
count=0 
graph.gr[u].size()=2 
i=21 
i=22 
i=23 
std::max(1=17 
errorlimit*epsrate=0.000301521 
count=0 
graph.gr[u].size()=12 
i=24 
i=25 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=1 
i=26 
i=27 
std::max(1=7 
errorlimit*epsrate=0.000124156 
count=0 
graph.gr[u].size()=1 
i=28 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=1 
i=29 
i=30 
i=31 
std::max(1=10 
errorlimit*epsrate=0.000177365 
count=0 
graph.gr[u].size()=15 
i=32 
i=33 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=3 
i=34 
i=35 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=1 
i=36 
i=37 
std::max(1=36 
errorlimit*epsrate=0.000638515 
count=0 
graph.gr[u].size()=2 
i=38 
i=39 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=4 
i=40 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=2 
i=41 
i=42 
i=43 
std::max(1=7 
errorlimit*epsrate=0.000124156 
count=0 
graph.gr[u].size()=2 
i=44 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=0 
i=45 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=2 
i=46 
i=47 
std::max(1=50 
errorlimit*epsrate=0.000886827 
count=0 
graph.gr[u].size()=49 
i=48 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=0 
i=49 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=3 
i=50 
i=51 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=2 
i=52 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=2 
i=53 
i=54 
i=55 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=1 
i=56 
i=57 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=4 
i=58 
i=59 
i=60 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=5 
i=61 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=1 
i=62 
i=63 
i=64 
i=65 
i=66 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=1 
i=67 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=0 
i=68 
i=69 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=3 
i=70 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=2 
i=71 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=1 
i=72 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=3 
i=73 
i=74 
i=75 
i=76 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=1 
i=77 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=2 
i=78 
i=79 
i=80 
i=81 
i=82 
i=83 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=1 
i=84 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=3 
i=85 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=3 
i=86 
i=87 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=2 
i=88 
std::max(1=20 
errorlimit*epsrate=0.000354731 
count=0 
graph.gr[u].size()=23 
i=89 
i=90 
i=91 
i=92 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=3 
i=93 
std::max(1=33 
errorlimit*epsrate=0.000585306 
count=0 
graph.gr[u].size()=2 
i=94 
i=95 
i=96 
i=97 
i=98 
i=99 
i=100 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=2 
i=101 
i=102 
i=103 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=4 
i=104 
i=105 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=3 
i=106 
i=107 
std::max(1=10 
errorlimit*epsrate=0.000177365 
count=0 
graph.gr[u].size()=15 
i=108 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=2 
i=109 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=2 
i=110 
i=111 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=4 
i=112 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=5 
i=113 
i=114 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=2 
i=115 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=3 
i=116 
i=117 
std::max(1=17 
errorlimit*epsrate=0.000301521 
count=0 
graph.gr[u].size()=4 
i=118 
i=119 
i=120 
std::max(1=6 
errorlimit*epsrate=0.000106419 
count=0 
graph.gr[u].size()=3 
i=121 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=2 
i=122 
std::max(1=106 
errorlimit*epsrate=0.00188007 
count=0 
graph.gr[u].size()=1 
i=123 
i=124 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=3 
i=125 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=1 
i=126 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=5 
i=127 
std::max(1=6 
errorlimit*epsrate=0.000106419 
count=0 
graph.gr[u].size()=2 
i=128 
std::max(1=8 
errorlimit*epsrate=0.000141892 
count=0 
graph.gr[u].size()=2 
i=129 
i=130 
i=131 
i=132 
i=133 
i=134 
i=135 
std::max(1=9 
errorlimit*epsrate=0.000159629 
count=0 
graph.gr[u].size()=3 
i=136 
i=137 
std::max(1=14 
errorlimit*epsrate=0.000248311 
count=0 
graph.gr[u].size()=11 
i=138 
i=139 
i=140 
i=141 
i=142 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=6 
i=143 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=35 
i=144 
i=145 
i=146 
i=147 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=1 
i=148 
std::max(1=60 
errorlimit*epsrate=0.00106419 
count=0 
graph.gr[u].size()=0 
i=149 
i=150 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=3 
i=151 
std::max(1=17 
errorlimit*epsrate=0.000301521 
count=0 
graph.gr[u].size()=12 
i=152 
i=153 
i=154 
i=155 
i=156 
i=157 
i=158 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=2 
i=159 
i=160 
i=161 
i=162 
i=163 
i=164 
i=165 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=3 
i=166 
i=167 
i=168 
std::max(1=18 
errorlimit*epsrate=0.000319258 
count=0 
graph.gr[u].size()=1 
i=169 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=1 
i=170 
std::max(1=8 
errorlimit*epsrate=0.000141892 
count=0 
graph.gr[u].size()=2 
i=171 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=2 
i=172 
i=173 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=1 
i=174 
i=175 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=3 
i=176 
std::max(1=11 
errorlimit*epsrate=0.000195102 
count=0 
graph.gr[u].size()=1 
i=177 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=3 
i=178 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=2 
i=179 
i=180 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=3 
i=181 
std::max(1=13 
errorlimit*epsrate=0.000230575 
count=0 
graph.gr[u].size()=3 
i=182 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=2 
i=183 
std::max(1=7 
errorlimit*epsrate=0.000124156 
count=0 
graph.gr[u].size()=5 
i=184 
std::max(1=7 
errorlimit*epsrate=0.000124156 
count=0 
graph.gr[u].size()=1 
i=185 
i=186 
i=187 
i=188 
i=189 
i=190 
i=191 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=3 
i=192 
std::max(1=7 
errorlimit*epsrate=0.000124156 
count=0 
graph.gr[u].size()=2 
i=193 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=2 
i=194 
i=195 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=2 
i=196 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=2 
i=197 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=1 
i=198 
i=199 
i=200 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=4 
i=201 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=1 
i=202 
i=203 
i=204 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=3 
i=205 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=4 
i=206 
i=207 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=3 
i=208 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=4 
i=209 
i=210 
i=211 
i=212 
std::max(1=6 
errorlimit*epsrate=0.000106419 
count=0 
graph.gr[u].size()=2 
i=213 
std::max(1=13 
errorlimit*epsrate=0.000230575 
count=0 
graph.gr[u].size()=1 
i=214 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=2 
i=215 
i=216 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=3 
i=217 
std::max(1=4 
errorlimit*epsrate=7.09461e-05 
count=0 
graph.gr[u].size()=3 
i=218 
i=219 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=2 
i=220 
i=221 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=0 
i=222 
i=223 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=1 
i=224 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=2 
i=225 
i=226 
i=227 
i=228 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=2 
i=229 
i=230 
std::max(1=39 
errorlimit*epsrate=0.000691725 
count=0 
graph.gr[u].size()=1 
i=231 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=1 
i=232 
i=233 
i=234 
i=235 
std::max(1=9 
errorlimit*epsrate=0.000159629 
count=0 
graph.gr[u].size()=7 
i=236 
std::max(1=11 
errorlimit*epsrate=0.000195102 
count=0 
graph.gr[u].size()=4 
i=237 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=2 
i=238 
std::max(1=17 
errorlimit*epsrate=0.000301521 
count=0 
graph.gr[u].size()=3 
i=239 
i=240 
i=241 
std::max(1=8 
errorlimit*epsrate=0.000141892 
count=0 
graph.gr[u].size()=1 
i=242 
i=243 
std::max(1=35 
errorlimit*epsrate=0.000620779 
count=0 
graph.gr[u].size()=48 
i=244 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=3 
i=245 
std::max(1=29 
errorlimit*epsrate=0.000514359 
count=0 
graph.gr[u].size()=10 
i=246 
i=247 
std::max(1=9 
errorlimit*epsrate=0.000159629 
count=0 
graph.gr[u].size()=3 
i=248 
i=249 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=18 
i=250 
i=251 
i=252 
std::max(1=57 
errorlimit*epsrate=0.00101098 
count=0 
graph.gr[u].size()=180 
i=253 
i=254 
std::max(1=10 
errorlimit*epsrate=0.000177365 
count=0 
graph.gr[u].size()=4 
i=255 
i=256 
std::max(1=7 
errorlimit*epsrate=0.000124156 
count=0 
graph.gr[u].size()=4 
i=257 
i=258 
i=259 
i=260 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=3 
i=261 
i=262 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=2 
i=263 
i=264 
i=265 
std::max(1=36 
errorlimit*epsrate=0.000638515 
count=0 
graph.gr[u].size()=1 
i=266 
i=267 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=2 
i=268 
i=269 
i=270 
i=271 
std::max(1=6 
errorlimit*epsrate=0.000106419 
count=0 
graph.gr[u].size()=4 
i=272 
std::max(1=10 
errorlimit*epsrate=0.000177365 
count=0 
graph.gr[u].size()=2 
i=273 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=3 
i=274 
std::max(1=6 
errorlimit*epsrate=0.000106419 
count=0 
graph.gr[u].size()=2 
i=275 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=1 
i=276 
i=277 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=3 
i=278 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=6 
i=279 
i=280 
std::max(1=55 
errorlimit*epsrate=0.000975509 
count=0 
graph.gr[u].size()=1 
i=281 
std::max(1=15 
errorlimit*epsrate=0.000266048 
count=0 
graph.gr[u].size()=1 
i=282 
i=283 
i=284 
std::max(1=1 
errorlimit*epsrate=1.77365e-05 
count=0 
graph.gr[u].size()=1 
i=285 
i=286 
i=287 
std::max(1=20 
errorlimit*epsrate=0.000354731 
count=0 
graph.gr[u].size()=23 
i=288 
std::max(1=6 
errorlimit*epsrate=0.000106419 
count=0 
graph.gr[u].size()=4 
i=289 
i=290 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=1 
i=291 
std::max(1=3 
errorlimit*epsrate=5.32096e-05 
count=0 
graph.gr[u].size()=2 
i=292 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=2 
i=293 
i=294 
i=295 
std::max(1=2 
errorlimit*epsrate=3.54731e-05 
count=0 
graph.gr[u].size()=12 
i=296 
i=297 
std::max(1=5 
errorlimit*epsrate=8.86827e-05 
count=0 
graph.gr[u].size()=4 
i=298 
i=299 
### Timer 
t=   0  1.650333  
t=   3  0.515653  
t=   5  0.515659  
t=   6  0.405861  
t=   8  0.123157  
t=  11  0.154904  
t=  12  0.001439  
t=  13  0.070693  
t= 100  0.177991  
config.beta=1 
[0;31m--------------stop------------2020-09-17 00:51:25[0m



